/**
 * OpenAPI Documentation - find.no
 * OpenApi documentation for find.no
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BidRequestDTO model module.
 * @module model/BidRequestDTO
 * @version 1.0
 */
class BidRequestDTO {
    /**
     * Constructs a new <code>BidRequestDTO</code>.
     * @alias module:model/BidRequestDTO
     * @param price {Number} 
     */
    constructor(price) { 
        
        BidRequestDTO.initialize(this, price);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, price) { 
        obj['price'] = price;
    }

    /**
     * Constructs a <code>BidRequestDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BidRequestDTO} obj Optional instance to populate.
     * @return {module:model/BidRequestDTO} The populated <code>BidRequestDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BidRequestDTO();

            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BidRequestDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BidRequestDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BidRequestDTO.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

BidRequestDTO.RequiredProperties = ["price"];

/**
 * @member {Number} price
 */
BidRequestDTO.prototype['price'] = undefined;






export default BidRequestDTO;

