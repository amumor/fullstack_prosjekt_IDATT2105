/**
 * OpenAPI Documentation - find.no
 * OpenApi documentation for find.no
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListingCreationRequestDTO from '../model/ListingCreationRequestDTO';
import ListingListResponseDTO from '../model/ListingListResponseDTO';
import ListingResponseDTO from '../model/ListingResponseDTO';

/**
* ListingController service.
* @module api/ListingControllerApi
* @version 1.0
*/
export default class ListingControllerApi {

    /**
    * Constructs a new ListingControllerApi. 
    * @alias module:api/ListingControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the create operation.
     * @callback module:api/ListingControllerApi~createCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListingResponseDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/ListingCreationRequestDTO} listingCreationRequestDTO 
     * @param {module:api/ListingControllerApi~createCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListingResponseDTO}
     */
    create(listingCreationRequestDTO, callback) {
      let postBody = listingCreationRequestDTO;
      // verify the required parameter 'listingCreationRequestDTO' is set
      if (listingCreationRequestDTO === undefined || listingCreationRequestDTO === null) {
        throw new Error("Missing the required parameter 'listingCreationRequestDTO' when calling create");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = ListingResponseDTO;
      return this.apiClient.callApi(
        '/api/v1/listing/create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getById operation.
     * @callback module:api/ListingControllerApi~getByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListingResponseDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/ListingControllerApi~getByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListingResponseDTO}
     */
    getById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ListingResponseDTO;
      return this.apiClient.callApi(
        '/api/v1/listing/id/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSuggestions operation.
     * @callback module:api/ListingControllerApi~getSuggestionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListingListResponseDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 0)] 
     * @param {Number} [size = 10)] 
     * @param {module:api/ListingControllerApi~getSuggestionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListingListResponseDTO}
     */
    getSuggestions(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'size': opts['size']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ListingListResponseDTO;
      return this.apiClient.callApi(
        '/api/v1/listing/get-suggestions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
