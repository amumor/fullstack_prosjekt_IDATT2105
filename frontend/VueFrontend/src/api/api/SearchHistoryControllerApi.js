/**
 * OpenAPI Documentation - find.no
 * OpenApi documentation for find.no
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient.js";
import SearchHistoryListResponseDTO from '../model/SearchHistoryListResponseDTO.js';
import SearchHistoryRequestDTO from '../model/SearchHistoryRequestDTO.js';
import SearchHistoryResponseDTO from '../model/SearchHistoryResponseDTO.js';

/**
* SearchHistoryController service.
* @module api/SearchHistoryControllerApi
* @version 1.0
*/
export default class SearchHistoryControllerApi {

    /**
    * Constructs a new SearchHistoryControllerApi. 
    * @alias module:api/SearchHistoryControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * @param {module:model/SearchHistoryRequestDTO} searchHistoryRequestDTO 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SearchHistoryResponseDTO} and HTTP response
     */
    addWithHttpInfo(searchHistoryRequestDTO) {
      let postBody = searchHistoryRequestDTO;
      // verify the required parameter 'searchHistoryRequestDTO' is set
      if (searchHistoryRequestDTO === undefined || searchHistoryRequestDTO === null) {
        throw new Error("Missing the required parameter 'searchHistoryRequestDTO' when calling add");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = SearchHistoryResponseDTO;
      return this.apiClient.callApi(
        '/api/v1/search-history/add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {module:model/SearchHistoryRequestDTO} searchHistoryRequestDTO 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SearchHistoryResponseDTO}
     */
    add(searchHistoryRequestDTO) {
      return this.addWithHttpInfo(searchHistoryRequestDTO)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SearchHistoryListResponseDTO} and HTTP response
     */
    findByUserIdWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SearchHistoryListResponseDTO;
      return this.apiClient.callApi(
        '/api/v1/search-history/get-my-history', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SearchHistoryListResponseDTO}
     */
    findByUserId() {
      return this.findByUserIdWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
